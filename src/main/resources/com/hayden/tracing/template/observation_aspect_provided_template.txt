package com.hayden.tracing_apt;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Aspect;
import org.springframework.stereotype.Component;
import com.hayden.tracing.Logged;
import com.hayden.tracing.observation_aspects.MonitoringTypes;
import org.aspectj.lang.annotation.*;
import com.hayden.tracing.model.*;
import lombok.*;
import com.hayden.tracing.observation_aspects.ObservationBehavior;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;

@Aspect
@Component
public class {{aspect_name}} {

    @Autowired @Lazy
    private ObservationBehavior observation;

    {{around}}
    {{after}}
    {{before}}
    public Object {{aspect_fn_name}}(ProceedingJoinPoint joinPoint) {
        return observation.doObservation(new ObservationBehavior.DiObservationArgs(joinPoint, "{{aspect_name}}", {{monitoring_types}}));
    }

}
